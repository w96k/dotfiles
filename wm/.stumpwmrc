(in-package :stumpwm)
;;(load "~/quicklisp/setup.lisp")

(setq *startup-message* "Welcome to your lovely LISP-machine")

(set-prefix-key (kbd "C-t"))

(set-module-dir "~/.stumpwm.d/modules")

(load-module :ttf-fonts)
(setf xft:*font-dirs* '("/run/current-system/profile/share/fonts/"))
(setf clx-truetype:+font-cache-filename+ (concat (getenv "HOME") "/.fonts/font-cache.sexp"))
(xft:cache-fonts)
(set-font (make-instance 'xft:font :family "Fira Code" :subfamily "Bold" :size 10.5))

(load-module "battery-portable")
(load-module "cpu")
(load-module "mem")
(load-module "command-history")
(load-module "clipboard-history")
(load-module "shell-command-history")
(load-module "app-menu")
(load-module "swm-gaps")
;;(load-module "screenshot")

;;(clx-truetype:cache-fonts)

(print *time-modeline-string*)

(setf *mode-line-pad-x* 0
      *mode-line-pad-y* 0
      *mode-line-timeout* 1
      *mouse-focus-policy* :click
      *window-border-style* :thin
      *message-window-gravity* :center
      *normal-border-width* 0
      *mode-line-border-width* 1
      *transient-border-width* 1
      *mode-line-position* :top
      *time-modeline-string* "%d.%m.%y %k:%M"
      *window-format* "%m%n%s%t "
      *hidden-window-color* ""
      *cpu-modeline-fmt* "%C"
      *mode-line-background-color* "#2d2d2d"
      *startup-mode-line* t
      *window-name-source* :class
      *delim* " ^2::^7 "      
      *screen-mode-line-format* (list
                                 ;; Windows
                                 ;;"[^4%n^b]"
                                 "^7%v  ^>"
                                 ;; CPU
                                 "^7%C" *delim*
                                 ;; RAM
                                 "%M" *delim*
                                 ;; Battery
                                 "%B" *delim*
                                 ;; Date
                                 "%d"
                                 ))

(set-normal-gravity :top)
(set-win-bg-color "#2d2d2d")

(defcommand icecat () ()
	    "Start Next or switch to it, if it is already running."
	    (run-or-raise "icecat" '(:class "IceCat")))
(define-key *root-map* (kbd "b") "icecat")

;; launch terminal
(defcommand urxvt () ()
  "Start Urxvt or switch to it, if it is already running."
  (run-or-raise "urxvt" '(:class "Urxvt")))
(define-key *root-map* (kbd "c") "urxvt")

;; Change xterm to urxvt
(define-key *root-map* (kbd "C") "exec urxvt")

;; Change emacs to emacsclient
(defcommand emacsclient () ()
  (run-or-raise "emacsclient -c -a emaces" '(:class "Emacs")))
(defcommand emacs () ()
  (run-or-raise "emacs" '(:class "Emacs")))
  (define-key *root-map* (kbd "e") "emacs")

;; Volume Management
(progn
  (define-key *top-map* (kbd "XF86AudioLowerVolume") "exec amixer -q sset Master 3%-")
  (define-key *top-map* (kbd "XF86AudioRaiseVolume") "exec amixer -q sset Master 3%+")
  (define-key *top-map* (kbd "XF86AudioMute") "amixer -q sset Master toggle"))

;; Printscreen
(defcommand printscreen () ()
	    (message "Print screen region")
	    (run-shell-command "xfce4-screenshooter"))
	    
(define-key *top-map* (kbd "SunPrint_Screen") "printscreen")

;; Mode-line
(enable-mode-line (current-screen) (current-head) t)

;; Gaps
;; (setf swm-gaps:*inner-gaps-size* 0)
;; (setf swm-gaps:*outer-gaps-size* 2)
;; (swm-gaps:toggle-gaps)

(setf (getenv "GDK_CORE_DEVICE_EVENTS") "1")

(defun key-press-hook (key key-seq cmd)
    (let ((*message-window-gravity* :bottom))
      (message-no-timeout "Key sequence: ~A"
               (print-key-seq (reverse key-seq))))
    (when (stringp cmd)
        (sleep 0.1)))

(defmacro replace-hook (hook fn)
  `(remove-hook ,hook ,fn)
  `(add-hook ,hook ,fn))

(replace-hook *key-press-hook* 'key-press-hook)

;; Clipboard history
;; (define-key *root-map* (kbd "C-y") "show-clipboard-history")
;; (clipboard-history:start-clipboard-manager)

;; Shell history
;; (setf shell-command-history:*shell-command-history-file*
;;       "/home/w96k/.cache/stumpwm/shell-command-history")

;; Menu
;; (setq app-menu:*app-menu*
;;       '(("Midnight Commander" "mc ~")
;;         ("Telegram" "telegram-desktop")
;;         ("Icecat" icecat)
;;         ("Next" next)
;;         ("Terminal" urxvt)
;;         ("Deluge" "deluge")))

;; (define-key *root-map* (kbd "q") "show-menu")

;; ;; Show / Hide mode-line
;; (define-key *root-map* (kbd "M") "mode-line")


